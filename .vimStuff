TODO
add snippits - quickly add chunks of code
add abriviations - quickly run command based on stuff typed in insert mode

Coercion
    MixedCase (crm), camelCase (crc), snake_case (crs), UPPER_CASE (cru),
    dash-case (cr-), dot.case (cr.), space case (cr<space>), and Title Case (crt)
Substitution
    :Subvert/address{,es}/reference{,s}/g
Abbreviation
    :Abolish {despa,sepe}rat{e,es,ed,ing,ely,ion,ions,or}  {despe,sepa}rat{}

unimpared
    [ before, or prev, or first
    ] after, or next or last
        <space> - add line
        e       - exchange lines
        f       - go to file
        lowercase = next/prev, upper = first/last
        q       - :cnext/cprev
        a       - :next/prev
        b       - :bnext/bprev
        n       - SCM conflict marker/diff hunk
    =o toggle
    [o on
    ]o off
      l - list ( show endlines )  
      r - relative numbers
    > increase indent
    < decrease indent
    = same indent
        p - paste linewise after
        P - paste linewise before
    [p - paste linewise before
    ]p - paste linewise after


motions
i - in (inside of object)
a - all (inside of object including surround, ie daw - delete word and white space, da" delete everything inside brackets including brackets)
s - surrounding (tpope/vim-surround)
    cs({ - change surrounding ( to {
    ds" - delete surrounding "
    ysiw} - wrap inner word in } ({ for no space)
    yss) - wrap sentence in ) ( use ( for no space)
    ds{ - delete surrounding {
    VISUAL MODE
        S<p class="important"> - wraps selection in p tag

t - till (untill char not including)
T - till backawards 
f - find (untill char including char)
f - find backwards
/ - search
$ - end
0 - start
^ - start non white



actions
d - delete
v - visual
c - change
y - yank

objects
w - start of next word (go forward)
e - end of word (go forward)
b - start of word (go back)
ge - eng of prev word (go back)
p - paragraph 
s - sentence
t - tags



--custom objects
i - indent ( github.com/michaeljsmith/vim-indent-object/ )
a - arguemnt ( https://github.com/vim-scripts/argtextobj.vim )

multiplier - action - motion - object

dd/yy - d or y whole line
D/C - d or change to end of line
I/A - insert at start or end
o/O - insert line before or after current and insert

:earlier 2m - undo all steps in last two minutes!!!

dot commant
can v select block of text, then use dot, and will repeat for each line

:normal $SomeNormalCommand 
:normal @w // use @w on visual selection

CTRL+A - increment number
14

PLUGINS
fugitive
syntatic

let @a='CTRL+a - will paste the contents of the buffer for editing, needs a ' added at the end

:CTRL+F - in command mode, show history


